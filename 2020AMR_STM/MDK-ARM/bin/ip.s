; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--debug -c -S -o.\bin\ip.s --depend=.\bin\ip.d --cpu=Cortex-M4 --apcs=interwork -O0 -I..\ -I..\CMSIS\Include -I..\CMSIS\STM32F4xx\Include -I..\STM32F4_Discovery -I..\STM32F4xx_StdPeriph_Driver\inc -I..\sdio -I..\fatfs -I..\Decode -I..\Deal -I..\Driver -I..\Ethernet -I..\Lwip -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F4XX -DHSE_VALUE=8000000 --omf_browse=.\bin\ip.crf ..\Lwip\ip.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

ip_fast_csum PROC
        MOV      r2,r0
        BX       lr
        ENDP

ip_init PROC
        MOV      r1,r0
        LDR      r0,|L0.276|
        STR      r1,[r0,#0]  ; local_ip
        MOVS     r0,#0
        BX       lr
        ENDP

ip_rcv_packet PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r0,#0x5f0
        LDR      r4,[r0,r5]
        LDR      r0,[r4,#0x10]
        BL       ntohl
        LDR      r1,|L0.276|
        LDR      r1,[r1,#0]  ; local_ip
        CMP      r0,r1
        BNE      |L0.82|
        LDRH     r0,[r4,#2]
        BL       ntohs
        MOV      r1,#0x5f4
        STR      r0,[r1,r5]
        MOVS     r1,#0x14
        MOV      r0,r5
        BL       skb_pull
        LDRB     r0,[r4,#9]
        CMP      r0,#0x11
        BNE      |L0.70|
        MOV      r0,r5
        BL       udp_rcv_packet
|L0.70|
        LDRB     r0,[r4,#9]
        CMP      r0,#1
        BNE      |L0.82|
        MOV      r0,r5
        BL       icmp_rcv_packet
|L0.82|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

ip_send PROC
        PUSH     {r2-r8,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r7,r2
        MOV      r1,sp
        MOV      r0,r6
        BL       arp_get_eth_addr
        CBZ      r0,|L0.114|
        MOV      r0,#0xffffffff
|L0.110|
        POP      {r2-r8,pc}
|L0.114|
        MOVS     r1,#0x14
        MOV      r0,r5
        BL       skb_push
        MOV      r4,r0
        LDRB     r0,[r4,#0]
        BIC      r0,r0,#0xf
        ADDS     r0,r0,#5
        STRB     r0,[r4,#0]
        LDRB     r0,[r4,#0]
        BIC      r0,r0,#0xf0
        ADDS     r0,r0,#0x40
        STRB     r0,[r4,#0]
        MOVS     r0,#0
        STRB     r0,[r4,#1]
        MOV      r1,#0x5f4
        LDR      r0,[r1,r5]
        BL       htons
        STRH     r0,[r4,#2]
        LDR      r1,|L0.280|
        LDRH     r0,[r1,#0]  ; ip_id
        LDRH     r1,[r1,#0]  ; ip_id
        ADDS     r1,r1,#1
        LDR      r3,|L0.280|
        STRH     r1,[r3,#0]
        BL       htons
        STRH     r0,[r4,#4]
        MOVS     r0,#0
        STRH     r0,[r4,#6]
        MOVS     r0,#0x14
        STRB     r0,[r4,#8]
        STRB     r7,[r4,#9]
        MOVS     r0,#0
        STRH     r0,[r4,#0xa]
        LDR      r0,|L0.276|
        LDR      r0,[r0,#0]  ; local_ip
        BL       htonl
        STR      r0,[r4,#0xc]
        MOV      r0,r6
        BL       htonl
        STR      r0,[r4,#0x10]
        LDRB     r0,[r4,#0]
        AND      r1,r0,#0xf
        MOV      r0,r4
        BL       ip_fast_csum
        STRH     r0,[r4,#0xa]
        MOV      r2,#0x800
        MOV      r1,sp
        MOV      r0,r5
        BL       eth_send
        MOVS     r0,#0
        B        |L0.110|
        ENDP

ip_skb_reserve PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       eth_skb_reserve
        MOVS     r1,#0x14
        MOV      r0,r4
        BL       skb_reserve
        POP      {r4,pc}
        ENDP

ip_get_source_ip PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        ADD      r5,r4,#0x10
        LDR      r0,[r5,#0xc]
        BL       ntohl
        POP      {r4-r6,pc}
        ENDP

|L0.276|
        DCD      local_ip
|L0.280|
        DCD      ip_id

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

local_ip
        DCD      0x00000000
ip_id
        DCW      0x0020

        EXPORT ip_fast_csum [CODE]
        EXPORT ip_init [CODE]
        EXPORT ip_rcv_packet [CODE]
        EXPORT ip_send [CODE]
        EXPORT ip_skb_reserve [CODE]
        EXPORT ip_get_source_ip [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT ntohl [CODE]
        IMPORT ntohs [CODE]
        IMPORT skb_pull [CODE]
        IMPORT udp_rcv_packet [CODE]
        IMPORT icmp_rcv_packet [CODE]
        IMPORT arp_get_eth_addr [CODE]
        IMPORT skb_push [CODE]
        IMPORT htons [CODE]
        IMPORT htonl [CODE]
        IMPORT eth_send [CODE]
        IMPORT eth_skb_reserve [CODE]
        IMPORT skb_reserve [CODE]

        KEEP local_ip
        KEEP ip_id

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
